{"name":"Astronomy","tagline":"Framework for running cqueues-based MoonScript applications","body":"# Astronomy\r\nFramework for running cqueues-based MoonScript applications\r\n\r\n## General Information\r\n\r\n### Contributors\r\n\r\n| Name            | Email                | GitHub Account |\r\n| ----------------|----------------------|--------------- |\r\n| Charles Heywood | charles@hashbang.sh  | ChickenNuggers |\r\n\r\n### Project Information\r\n\r\n**Astronomy** is a MoonScript framework meant to provide a middleware to run\r\nmultiple [cqueues](https://github.com/wahern/cqueues) MoonScript or Lua\r\napplications without running multiple Lua states.\r\n\r\n### Dependencies\r\n\r\n[LuaRocks](https://luarocks.org/) (Recommended)\r\n\r\n[MoonScript](https://github.com/leafo/moonscript)\r\n (required for development releases only)\r\n\r\n[Lua](http://www.lua.org)\r\n\r\n[luafilesystem](https://github.com/keplerproject/luafilesystem)\r\n\r\n[cqueues](https://github.com/wahern/cqueues)\r\n\r\n## Getting Started\r\n\r\n### Installing Dependencies with LuaRocks\r\n\r\nIt is assumed that users already have LuaRocks installed on their machine for\r\nthis process; LuaRocks installation instructions will not be included. If a user\r\ndoes **not** have LuaRocks installed, they will have to manually go to the above\r\npage for the dependency and download the program manually. Users can pass the\r\n`--local` flag to `luarocks install` so that libraries and binaries can be\r\ninstalled locally.\r\n\r\n```sh\r\n$ luarocks install cqueues\r\n$ luarocks install luafilesystem\r\n$ luarocks install moonscript # Optional\r\n```\r\n\r\n### Installing subprograms\r\n\r\nThe purpose of Astronomy is to run subprograms, or scripts that run in parallel\r\nto another yet are independent. Astronomy also will (**TODO**) offer an API\r\nthat must be registered to be used by applications inside of Astronomy's\r\nconfiguration files.\r\n\r\nPrograms are simple to install; most times users should be able to place a\r\nfolder inside of `./programs` and be done. However, some users might want to\r\ngive a program more permissions within Astronomy. Users should only need to\r\nuse `$ touch $PROGRAM_NAME.permissions` to give the program full-level\r\npermissions within Astronomy.\r\n\r\n#### Installing subprograms via git\r\n\r\nSubprograms can be easily installed by simply cloning them into the `programs`\r\nfolder; updating all programs at once can be easily achieved by running `git\r\nclone --recurse-submodules`.\r\n\r\n## Subprograms\r\n\r\nThe simplest of subprograms should have a `main` function returned inside of\r\na table; this enables Astronomy to pass the cqueues queue to the program. The\r\nprogram itself should never call `queue\\loop!` or `queue:loop()` as this\r\ndefeats the purpose of Astronomy. An example program is below.\r\n\r\n**MoonScript**\r\n\r\n```moonscript\r\nastronomy = require 'astronomy'\r\ncqueues   = require 'cqueues'\r\n\r\nmain = (queue)->\r\n queue\\wrap ->\r\n  while true\r\n   cqueues.sleep 5\r\n   astronomy.log 'Yay, astronomy!'\r\n\r\nreturn :main\r\n```\r\n\r\n**Lua**\r\n\r\n```lua\r\nlocal astronomy = require(\"astronomy\")\r\nlocal cqueues   = require(\"cqueues\")\r\n\r\nlocal function main(queue)\r\n queue:wrap(function()\r\n  while true do\r\n   cqueues.sleep(5)\r\n   astronomy.log(\"Yay, astronomy!\")\r\n  end\r\n end)\r\nend\r\n\r\nreturn {main=main}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}